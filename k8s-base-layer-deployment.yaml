
###################################
# SERVICE ACCOUNT
###################################
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: service-account-baggage@proyectogrupo3.iam.gserviceaccount.com
  name: service-account-baggage
  namespace: default
###################################
# USERS
###################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      # serviceAccountName: service-account-baggage
      # automountServiceAccountToken: false
      containers:
        - name: users
          image: us-central1-docker.pkg.dev/proyectogrupo3/repository-baggage/users:2.0
          ports:
            - containerPort: 3010
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
          env:
          - name: DB_USER
            value: "postgres"
          - name: DB_PASSWORD
            value: "baggage-db"
          - name: DB_HOST
            value: "192.168.0.3"
          - name: DB_PORT
            value: "5432"
          - name: DB_NAME
            value: "baggage-db"
          - name: SECRET_TOKEN
            value: "qwerty"
          - name: NATIVE_PATH
            value: "http://service-truenative"
          - name: USERS_PATH
            value: "http://servicio-users"
          - name: PROJECT_ID
            value: "proyectogrupo3"
          - name: EMAIL_TOPIC
            value: "send-email"
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: baggage-users-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3010
    type: HTTP
    requestPath: /users/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-users
  annotations:
    cloud.google.com/backend-config: '{"default": "baggage-users-config"}'
spec:
  type: NodePort
  selector:
    app: users
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3010
      nodePort: 31019

###################################
# CARDS
###################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cards
  labels:
    app: cards
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cards
  template:
    metadata:
      labels:
        app: cards
    spec:
      # serviceAccountName: service-account-baggage
      # automountServiceAccountToken: false
      containers:
        - name: cards
          image: us-central1-docker.pkg.dev/proyectogrupo3/repository-baggage/cards:3.0
          ports:
            - containerPort: 3008
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
          env:
          - name: DB_USER
            value: "postgres"
          - name: DB_PASSWORD
            value: "baggage-db"
          - name: DB_HOST
            value: "192.168.0.3"
          - name: DB_PORT
            value: "5432"
          - name: DB_NAME
            value: "baggage-db"
          - name: SECRET_TOKEN
            value: "qwerty"
          - name: TRUENATIVE_PATH
            value: "http://service-truenative"
          - name: USERS_PATH
            value: "http://servicio-users"
          - name: PROJECT_ID
            value: "proyectogrupo3"
          - name: EMAIL_TOPIC
            value: "send-email"
          - name: CARDS_TOPIC
            value: "card-verification"
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: baggage-cards-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3008
    type: HTTP
    requestPath: /credit-cards/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-cards
  annotations:
    cloud.google.com/backend-config: '{"default": "baggage-cards-config"}'
spec:
  type: NodePort
  selector:
    app: cards
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3008
      nodePort: 31029

###################################
# OFFERS
###################################
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: offers
#   labels:
#     app: offers
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: offers
#   template:
#     metadata:
#       labels:
#         app: offers
#     spec:
#       containers:
#         - name: offers
#           image: us-central1-docker.pkg.dev/proyectogrupo3/repository-baggage/offers:1.0
#           ports:
#             - containerPort: 3003
#           # Realizar pull siempre a la imagen
#           imagePullPolicy: Always
#           env:
#           - name: DB_USER
#             value: "postgres"
#           - name: DB_PASSWORD
#             value: "baggage-db"
#           - name: DB_HOST
#             value: "192.168.0.3"
#           - name: DB_PORT
#             value: "5432"
#           - name: DB_NAME
#             value: "baggage-db"
#           - name: USERS_PATH
#             value: "http://servicio-users"
# ---
# apiVersion: cloud.google.com/v1
# kind: BackendConfig
# metadata:
#   name: baggage-offers-config
# spec:
#   healthCheck:
#     checkIntervalSec: 30
#     port: 3003
#     type: HTTP
#     requestPath: /offers/ping
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: servicio-offers
#   annotations:
#     cloud.google.com/backend-config: '{"default": "baggage-offers-config"}'
# spec:
#   type: NodePort
#   selector:
#     app: offers
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 3003
#       nodePort: 31020

###################################
# ROUTES
###################################
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: routes
#   labels:
#     app: routes
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: routes
#   template:
#     metadata:
#       labels:
#         app: routes
#     spec:
#       containers:
#         - name: routes
#           image: us-central1-docker.pkg.dev/proyectogrupo3/repository-baggage/routes:1.0
#           ports:
#             - containerPort: 3002
#           # Realizar pull siempre a la imagen
#           imagePullPolicy: Always
#           env:
#           - name: DB_USER
#             value: "postgres"
#           - name: DB_PASSWORD
#             value: "baggage-db"
#           - name: DB_HOST
#             value: "192.168.0.3"
#           - name: DB_PORT
#             value: "5432"
#           - name: DB_NAME
#             value: "baggage-db"
#           - name: USERS_PATH
#             value: "http://servicio-users"
# ---
# apiVersion: cloud.google.com/v1
# kind: BackendConfig
# metadata:
#   name: baggage-routes-config
# spec:
#   healthCheck:
#     checkIntervalSec: 30
#     port: 3002
#     type: HTTP
#     requestPath: /routes/ping
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: servicio-routes
#   annotations:
#     cloud.google.com/backend-config: '{"default": "baggage-routes-config"}'
# spec:
#   type: NodePort
#   selector:
#     app: routes
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 3002
#       nodePort: 31021


###################################
# POSTS
###################################
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: posts
#   labels:
#     app: posts
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: posts
#   template:
#     metadata:
#       labels:
#         app: posts
#     spec:
#       containers:
#         - name: posts
#           image: us-central1-docker.pkg.dev/proyectogrupo3/repository-baggage/posts:1.0
#           ports:
#             - containerPort: 3001
#           # Realizar pull siempre a la imagen
#           imagePullPolicy: Always
#           env:
#           - name: DB_USER
#             value: "postgres"
#           - name: DB_PASSWORD
#             value: "baggage-db"
#           - name: DB_HOST
#             value: "192.168.0.3"
#           - name: DB_PORT
#             value: "5432"
#           - name: DB_NAME
#             value: "baggage-db"
#           - name: USERS_PATH
#             value: "http://servicio-users"
# ---
# apiVersion: cloud.google.com/v1
# kind: BackendConfig
# metadata:
#   name: baggage-posts-config
# spec:
#   healthCheck:
#     checkIntervalSec: 30
#     port: 3001
#     type: HTTP
#     requestPath: /posts/ping
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: servicio-posts
#   annotations:
#     cloud.google.com/backend-config: '{"default": "baggage-posts-config"}'
# spec:
#   type: NodePort
#   selector:
#     app: posts
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 3001
#       nodePort: 31022

###################################
# NATIVE
###################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: truenative
  labels:
    app: truenative
spec:
  replicas: 1
  selector:
    matchLabels:
      app: truenative
  template:
    metadata:
      labels:
        app: truenative
    spec:
      # serviceAccountName: service-account-baggage
      # automountServiceAccountToken: false
      containers:
        - name: truenative
          image: ghcr.io/misw-4301-desarrollo-apps-en-la-nube/true-native:2.0.0
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          env:
            - name: "SECRET_TOKEN"
              value: qwerty

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: truenative-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3000
    type: HTTP
    requestPath: /native/ping

---
kind: Service
apiVersion: v1
metadata:
  name: service-truenative
  annotations:
    cloud.google.com/backend-config: '{"default": "truenative-config"}'
spec:
  type: NodePort
  selector:
    app: truenative
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 31018